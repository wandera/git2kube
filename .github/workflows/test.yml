name: Test

on:
  push:
    branches:
    - master
  pull_request:
  issue_comment:
    types:
    - created

jobs:
  unit:
    if: (github.event.issue.pull_request != '' && contains(github.event.comment.body, '/test')) || github.event_name == 'pull_request' || github.event_name == 'push'
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Install Go
      uses: actions/setup-go@v4
      with:
        go-version-file: go.mod
    - name: Test
      run: go test -v ./...
  build:
    if: (github.event.issue.pull_request != '' && contains(github.event.comment.body, '/test')) || github.event_name == 'pull_request' || github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Docker build
      uses: docker/build-push-action@v4
      with:
        context: .
        build-args: |
          VERSION=${{ github.ref_name }}
  vulncheck:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Scan for Vulnerabilities in Code
      uses: wandera/govulncheck-action@v0.0.10
      with:
        go-version: 1.20.0
        package: ./...
