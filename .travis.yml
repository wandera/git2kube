language: go
go:
- "1.20.1"
- "master"

notifications:
  email:
    on_success: never
    on_failure: always

matrix:
  # It's ok if our code fails on unstable development versions of Go.
  allow_failures:
  - go: master
  # Don't wait for tip tests to finish. Mark the test run green if the
  # tests pass on the stable versions of Go.
  fast_finish: true

env:
- GO111MODULE=on

install:
- go get -u golang.org/x/lint/golint

script:
  - go test -v ./...
  - go vet -v ./...
  - golint -set_exit_status $(go list ./...)
  - |
    if [ -n "$(gofmt -s -l $(find . -type f -name '*.go'))" ]; then
        echo "Go code is not formatted:"
        gofmt -s -d -e $(find . -type f -name '*.go')
        exit 1
    fi

before_deploy:
  - PLATFORMS=(darwin/amd64 freebsd/amd64 linux/amd64 windows/amd64)

 # build binary for all archs
  - |
    for PLATFORM in "${PLATFORMS[@]}"; do
      echo "Building $PLATFORM"
      GOOS=${PLATFORM%/*}
      GOARCH=${PLATFORM#*/}
      if [ "$GOOS" = "windows" ]; then
        build_cmd="GOOS=$GOOS GOARCH=$GOARCH go build -o git2kube -ldflags '-w -s -X 'github.com/wandera/git2kube/cmd.Version=${TRAVIS_TAG}"
      else
        build_cmd="CGO_ENABLED=0 GOOS=$GOOS GOARCH=$GOARCH go build -o git2kube -ldflags '-w -s -X 'github.com/wandera/git2kube/cmd.Version=${TRAVIS_TAG}"
      fi
      if ! eval $build_cmd; then
        echo "Failed building sample for $PLATFORM" && return 1
      fi
      if [ "$GOOS" = "windows" ]; then
        zip git2kube-${GOOS}-${GOARCH}.zip git2kube
      else
        tar cvzf git2kube-${GOOS}-${GOARCH}.tgz git2kube
      fi
    done
  - ls

deploy:
  provider: releases
  api_key:
    secure: TC57R+sIAK/imH/QOTo6tmxIQBeO0+OIxHskSLJ2sfg4/5WDzfkrx5PH6h5nllOl4w9GjaqHlTom2AxOnh75UTMW0sjE9rsCUy4C7bF0yjfEnqE95dLm6nZPaEjQCQcVAwziLnkP0IuhCFapqwLioE/8o/KSBusO6IXk2XToK5bV0kZALeK1TdoxVTsHaAQsy2eCO3Da0PdKu3SapbiOfN7kgvPuzvamrZoaGl3rfJzKZk2wZWkKpki89w3tTbTj2qLQdwNpblBcivv0KNKQ/kfNYdknTlUNGhh1qf5u6yX/wvDHgNMVK3eUF/7hSSNPB37ynQ4BL9YAVsqj5egtW0DwcoZDouG4IbG9noS5/lzsiYUkyYIuvaFkpAiYRwF6BNunSNGDIfgIzMEb6TaS+iCjfoH1DyGtiGa1V3yMN4gApm6WNGN5cGzIEUi/K34w4F7WNhIXMjkKhQImbAU6YXpypFAPRYQDnMc2S7yWBu6u1D2XIkvL92MPwArG6e/DZV7qsu/YU9QUhBmgb2UqSR110Q0psEYuOJv3lq912hl4ncp0YBRd+SpWgKv5LajJtcUgRD3q8aatHjUlFkyC4pY9ehzRR5kp0Hp8ZMEboOVR4JRcBDwq5jseoMvc99NmC49WlsdWVRRX+ZF7ALX39QWkfyPWSdZMi2zYMrpv4Zk=
  file:
    - "git2kube-darwin-amd64.tgz"
    - "git2kube-freebsd-amd64.tgz"
    - "git2kube-linux-amd64.tgz"
    - "git2kube-windows-amd64.zip"
  skip_cleanup: true
  on:
    tags: true
